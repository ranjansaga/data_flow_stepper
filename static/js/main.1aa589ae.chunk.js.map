{"version":3,"sources":["Hello.js","index.js"],"names":["name","TestStepper","props","onStepToggle","nodeObj","console","log","active","this","forceUpdate","renderStepContent","className","node_information","map","dataObj","valueStyle","color","label","style","value","state","data","nodes","index","nodeStyle","background","onClick","class","icon","aria-hidden","key","node_name","Component","App","content","Hello","render","document","getElementById"],"mappings":"2NAEe,gBAAGA,KAAH,OAAc,mDCKvBC,G,oEACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,aAAe,SAAUC,GACvBC,QAAQC,IAAI,0BAAwBF,GACpCA,EAAQG,QAAUH,EAAQG,OAC1BC,KAAKC,eAVY,EAanBC,kBAAoB,SAASN,GAC3B,OACE,yBAAKO,UAAU,wBACP,yBAAKA,UAAU,gBAEXP,EAAQQ,iBAAiBC,KAAI,SAACC,GAC5B,IAAIC,EAAY,CACdC,MAAOF,EAAQE,OAEjB,OACU,yBAAKL,UAAU,yBACb,yBAAKA,UAAU,SACZG,EAAQG,OAEX,yBACEN,UAAU,QACVO,MAAOH,GACND,EAAQK,cA5BvC,EAAKC,MAAQ,CACXC,KAAMnB,EAAMmB,MAHG,E,qDA0CT,IAAD,OACDC,EAAQd,KAAKY,MAAMC,KAAKR,KAAI,SAACT,EAASmB,GAC1C,IAAIC,EAAY,CACFC,WAAYrB,EAAQY,OAElC,OACE,6BACE,yBACEU,QAAS,WAAO,EAAKvB,aAAaC,IAClCO,UAAU,uBACV,yBACEgB,MAAM,cACNT,MAAOM,GACP,uBAAGb,UAAWP,EAAQwB,KAAMC,cAAY,WAG5C,yBACEC,IAAKP,EACLZ,UAAW,QAAUP,EAAQY,OAE7B,yBAAKL,UAAU,eACb,yBAAKA,UAAU,UAAUP,EAAQ2B,YAE/B3B,EAAQG,QACR,EAAKG,kBAAkBN,QAMnC,OACE,yBAAKO,UAAU,SACZW,O,GA3EiBU,cAgFpBC,E,kDACJ,aAAe,IAAD,8BACZ,gBACKb,MAAQ,CACXpB,KAAM,UACNkC,QAAU,CAAC,CACf,UAAa,SACb,MAAS,QACT,KAAQ,eACR,QAAU,EACV,iBAAoB,CAAC,CACnB,MAAS,0CACT,MAAS,GACT,MAAS,OAEV,CACC,MAAS,2BACT,MAAS,GACT,MAAS,SAEV,CACC,MAAS,gCACT,MAAS,GACT,MAAS,YAGT,CACF,UAAa,UACb,MAAS,MACT,KAAQ,eACR,QAAU,EACV,iBAAoB,CAAC,CACnB,MAAS,0CACT,MAAS,GACT,MAAS,OAEV,CACC,MAAS,2BACT,MAAS,GACT,MAAS,SAEV,CACC,MAAS,gCACT,MAAS,GACT,MAAS,SAEV,CACC,MAAS,0CACT,MAAS,GACT,MAAS,UAEV,CACC,MAAS,8BACT,MAAS,GACT,MAAS,aArDG,E,qDA6DZ,OACE,6BACE,kBAACC,EAAD,CAAOnC,KAAMQ,KAAKY,MAAMpB,OACtB,kBAAC,EAAD,CACEqB,KAAMb,KAAKY,MAAMc,e,GAlEXF,aAyElBI,iBAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.1aa589ae.chunk.js","sourcesContent":["import React from 'react';\n\nexport default ({ name }) => <h1> Data flow stepper</h1>;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Hello from './Hello';\nimport './style.css';\nimport './bootstrap.min.css';\nimport \"typeface-roboto\";\n\nclass TestStepper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data\n    }\n  }\n\n  onStepToggle = function (nodeObj) {\n    console.log('nodeObj in toggle-->', nodeObj)\n    nodeObj.active = !nodeObj.active;\n    this.forceUpdate();\n  }\n\n  renderStepContent = function(nodeObj) {\n    return (\n      <div className=\"step-content-wrapper\">\n              <div className=\"step-content\">\n                {\n                  nodeObj.node_information.map((dataObj) => {\n                    let valueStyle= {\n                      color: dataObj.color\n                    }\n                    return  (\n                              <div className=\"row step-content-rows\">\n                                <div className=\"col-6\">\n                                  {dataObj.label}\n                                </div>\n                                <div\n                                  className=\"col-6\"\n                                  style={valueStyle}>\n                                  {dataObj.value}\n                                </div>\n                              </div>\n                            )\n                  })\n                }\n              </div>\n            </div>\n    )\n  }\n\n\n  render() {\n    const nodes = this.state.data.map((nodeObj, index) => {\n      let nodeStyle = {\n                    background: nodeObj.color\n                  }\n      return (\n        <div>\n          <div\n            onClick={() => {this.onStepToggle(nodeObj)}}\n            className=\"circle-icon-wrapper\">\n            <div\n              class=\"circle-icon\"\n              style={nodeStyle} >\n              <i className={nodeObj.icon} aria-hidden=\"true\"></i>\n            </div>\n          </div>\n          <div\n            key={index}\n            className={'step ' + nodeObj.color}\n            >\n            <div className=\"step-header\">\n              <div className=\"header\">{nodeObj.node_name}</div>\n            </div>\n              { nodeObj.active &&\n                this.renderStepContent(nodeObj)}\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"steps\">\n        {nodes}\n      </div>);\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: 'Stepper',\n      content:  [{\n \t\"node_name\": \"Client\",\n \t\"color\": \"green\",\n \t\"icon\": \"fa fa-circle\",\n  \"active\": false,\n \t\"node_information\": [{\n \t\t\t\"label\": \"Number of pollings done for each target\",\n \t\t\t\"value\": 23,\n \t\t\t\"color\": \"red\"\n \t\t},\n \t\t{\n \t\t\t\"label\": \"Total number of pollings\",\n \t\t\t\"value\": 23,\n \t\t\t\"color\": \"green\"\n \t\t},\n \t\t{\n \t\t\t\"label\": \"Number of documments received\",\n \t\t\t\"value\": 33,\n \t\t\t\"color\": \"orange\"\n \t\t}\n \t]\n }, {\n \t\"node_name\": \"Router1\",\n \t\"color\": \"red\",\n \t\"icon\": \"fa fa-pencil\",\n  \"active\": false,\n \t\"node_information\": [{\n \t\t\t\"label\": \"Number of pollings done for each target\",\n \t\t\t\"value\": 33,\n \t\t\t\"color\": \"red\"\n \t\t},\n \t\t{\n \t\t\t\"label\": \"Total number of pollings\",\n \t\t\t\"value\": 22,\n \t\t\t\"color\": \"green\"\n \t\t},\n \t\t{\n \t\t\t\"label\": \"Number of documments received\",\n \t\t\t\"value\": 33,\n \t\t\t\"color\": \"green\"\n \t\t},\n \t\t{\n \t\t\t\"label\": \"Number of documents received per target\",\n \t\t\t\"value\": 32,\n \t\t\t\"color\": \"orange\"\n \t\t},\n \t\t{\n \t\t\t\"label\": \"Number of documents dropped\",\n \t\t\t\"value\": 44,\n \t\t\t\"color\": \"green\"\n \t\t}\n \t]\n }]\n}\n  }\n\n  render() {\n    return (\n      <div>\n        <Hello name={this.state.name} />\n          <TestStepper\n            data={this.state.content}\n          />\n      </div>\n    );\n  }\n}\n\nrender(<App />, document.getElementById('root'));"],"sourceRoot":""}